expect_known_output(loadEXCEL(Filepath=path), rbind(a,b,c))
loadEXCEL(Filepath=path)
setwd(Filepath)
Filepath=path
setwd(Filepath)
rm(Filepath)
path <- paste0(getwd(), "/tests/testthat/data")
expect_known_output(loadEXCEL(Filepath=path), rbind(a,b,c))
expect_known_output(Exceldataset, rbind(a,b,c))
abc <- rbind(a,b,c)
expect_known_output(Exceldataset, abc)
expect_equal(Exceldataset, abc)
d<-expect_equal(Exceldataset, abc)
View(d)
testthat::test_that("Load all excel file that is in the folder and combine them.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
b <- readxl::read_excel(paste0(path,"/b.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path)
expect_equal(Exceldataset, abc)
}
)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac)
}
)
devtools::load_all("D:/HsuWP/GIT/Rproject/loadFile")
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac)
}
)
View(Test_data)
ac_list <- list(a,c)
View(ac_list)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
}
)
View(ac_list)
View(Test_data)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(Test_data, ac)
}
)
ac <- rbind(a,c)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(Test_data, ac)
}
)
View(ac_list)
names(ac_list) <- c("a.xlsx", "c.xlsx")
View(ac_list)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(Test_data, ac)
}
)
View(ac_list)
path <- paste0(getwd(), "/tests/testthat/data")
path <- paste0(getwd(), "/tests/testthat/data")
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(Test_data, ac)
}
)
path
path <- "D:/HsuWP/GIT/Rproject/loadFile/tests/testthat/data"
path <- "D:/HsuWP/GIT/Rproject/loadFile/tests/testthat/data"
path
path
path
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(Test_data, ac)
}
)
testthat::test_that(
"Load all excel file that is in the folder and combine them.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
b <- readxl::read_excel(paste0(path,"/b.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path)
expect_equal(Exceldataset, abc)
}
)
expect_equal(Test_data, ac_list)
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
expect_equal(Test_data, ac_list)
expect_failure(Test_data, ac)
!expect_equal(Test_data, ac)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
!expect_equal(Test_data, ac)
}
)
d <- expect_equal(Test_data, ac)
all.equal(Test_data, ac)
View(ac_list)
View(ac_list)
View(Test_data)
d<-all.equal(Test_data, ac)
View(ac_list)
View(Test_data)
expect_identical(Test_data, ac)
ecpect_false(expect_equal(Test_data, ac))
expect_failure(expect_equal(Test_data, ac))
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(expect_equal(Test_data, ac))
}
)
testthat::test_that(
"Load all excel file and skip column title, then set the new.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"), col_names=c("Name_d", "H", "W", "score"))
b <- readxl::read_excel(paste0(path,"/b.xlsx"), col_names=c("Name_d", "H", "W", "score"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"), col_names=c("Name_d", "H", "W", "score"))
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path, Colname=c("Name_d", "H", "W", "score"), Skip=1)
expect_equal(Exceldataset, abc)
}
)
View(a)
expect_equal(Exceldataset, abc)
a <- readxl::read_excel(paste0(path,"/a.xlsx"), col_names=c("Name_d", "H", "W", "score"))
b <- readxl::read_excel(paste0(path,"/b.xlsx"), col_names=c("Name_d", "H", "W", "score"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"), col_names=c("Name_d", "H", "W", "score"))
abc <- rbind(a,b,c)
expect_equal(Exceldataset, abc)
View(a)
testthat::test_that(
"Load all excel file and skip column title, then set the new.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"), col_names=c("Name_d", "H", "W", "score"), Skip=1)
b <- readxl::read_excel(paste0(path,"/b.xlsx"), col_names=c("Name_d", "H", "W", "score"), Skip=1)
c <- readxl::read_excel(paste0(path,"/c.xlsx"), col_names=c("Name_d", "H", "W", "score"), Skip=1)
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path, Colname=c("Name_d", "H", "W", "score"), Skip=1)
expect_equal(Exceldataset, abc)
}
)
testthat::test_that(
"Load all excel file and skip column title, then set the new.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
b <- readxl::read_excel(paste0(path,"/b.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
c <- readxl::read_excel(paste0(path,"/c.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path, Colname=c("Name_d", "H", "W", "score"), Skip=1)
expect_equal(Exceldataset, abc)
}
)
path <- "D:/HsuWP/GIT/Rproject/loadFile/tests/testthat/data"
testthat::test_that(
"Load all excel file that is in the folder and combine them.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
b <- readxl::read_excel(paste0(path,"/b.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path)
expect_equal(Exceldataset, abc)
}
)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(expect_equal(Test_data, ac))
}
)
testthat::test_that(
"Load all excel file and skip column title, then set the new.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
b <- readxl::read_excel(paste0(path,"/b.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
c <- readxl::read_excel(paste0(path,"/c.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path, Colname=c("Name_d", "H", "W", "score"), Skip=1)
expect_equal(Exceldataset, abc)
}
)
devtools::load_all("D:/HsuWP/GIT/Rproject/loadFile")
devtools::load_all("D:/HsuWP/GIT/Rproject/loadFile")
path!=getwd()
path <- "123"
path!=getwd()
path
if (path!=getwd()) {
path <- paste0(getwd(), "/tests/testthat/data")
} else {
path <- path
}
path
if (path!=getwd()) {
path <- paste0(getwd(), "/tests/testthat/data")
} else {
path <- path
}
path
testthat::test_that(
"Load all excel file that is in the folder and combine them.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
b <- readxl::read_excel(paste0(path,"/b.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path)
expect_equal(Exceldataset, abc)
}
)
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
path
path <- "123"
if (path!=getwd()) {
path <- paste0(getwd(), "/tests/testthat/data")
} else {
path <- path
}
path
setwd("D:/HsuWP/GIT/Rproject/loadFile/tests/testthat/data")
setwd("/tests/testthat/data")
path
path<-"D:/HsuWP/GIT/Rproject/loadFile/tests/testthat/data"
path
setwd("D:/HsuWP/GIT/Rproject/loadFile")
"/tests/testthat/data" %in% getwd()
path
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
loadEXCEL(Filepath=path)
expect_equal(Exceldataset, abc)
testthat::test_that(
"Load all excel file that is in the folder and combine them.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
b <- readxl::read_excel(paste0(path,"/b.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path)
expect_equal(Exceldataset, abc)
}
)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(expect_equal(Test_data, ac))
}
)
testthat::test_that(
"Load all excel file and skip column title, then set the new.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
b <- readxl::read_excel(paste0(path,"/b.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
c <- readxl::read_excel(paste0(path,"/c.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path, Colname=c("Name_d", "H", "W", "score"), Skip=1)
expect_equal(Exceldataset, abc)
}
)
"/tests/testthat/data" %in% getwd()
getwd()
grepl("/tests/testthat/data", getwd())
path
paste0(path,"/a.xlsx")
path<-"D:/HsuWP/GIT/Rproject/loadFile"
path
setwd("D:/HsuWP/GIT/Rproject/loadFile"")
if (grepl("/tests/testthat/data", getwd())) {
setwd("D:/HsuWP/GIT/Rproject/loadFile")
path
getwd()
paste0(path,"/a.xlsx")
paste0(getwd(),"/tests/testthat/data")
library("loadFile")
if (grepl("/tests/testthat/data", getwd())) {
path <- path
} else {
path <- paste0(getwd(),"/tests/testthat/data")
}
path
testthat::test_that(
"Load all excel file that is in the folder and combine them.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
b <- readxl::read_excel(paste0(path,"/b.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path)
expect_equal(Exceldataset, abc)
}
)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(expect_equal(Test_data, ac))
}
)
testthat::test_that(
"Load all excel file and skip column title, then set the new.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
b <- readxl::read_excel(paste0(path,"/b.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
c <- readxl::read_excel(paste0(path,"/c.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path, Colname=c("Name_d", "H", "W", "score"), Skip=1)
expect_equal(Exceldataset, abc)
}
)
library("loadFile")
if (grepl("/tests/testthat/data", getwd())) {
path <- path
} else {
path <- paste0(getwd(),"/tests/testthat/data")
}
path
testthat::test_that(
"Load all excel file that is in the folder and combine them.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
b <- readxl::read_excel(paste0(path,"/b.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path)
expect_equal(Exceldataset, abc)
}
)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(expect_equal(Test_data, ac))
}
)
testthat::test_that(
"Load all excel file and skip column title, then set the new.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
b <- readxl::read_excel(paste0(path,"/b.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
c <- readxl::read_excel(paste0(path,"/c.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path, Colname=c("Name_d", "H", "W", "score"), Skip=1)
expect_equal(Exceldataset, abc)
}
)
library("loadFile")
if (grepl("/tests/testthat/data", getwd())) {
path <- path
} else {
path <- paste0(getwd(),"/tests/testthat/data")
}
testthat::test_that(
"Load all excel file that is in the folder and combine them.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
b <- readxl::read_excel(paste0(path,"/b.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path)
expect_equal(Exceldataset, abc)
}
)
testthat::test_that(
"Load a.xlsx and c.xlsx, then become two tibble in Test_data.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"))
c <- readxl::read_excel(paste0(path,"/c.xlsx"))
ac <- rbind(a,c)
ac_list <- list(a,c)
names(ac_list) <- c("a.xlsx", "c.xlsx")
loadEXCEL(Dataname=c("Test_data"), Filepath=path, File=c("a.xlsx", "c.xlsx"), Combine=FALSE)
expect_equal(Test_data, ac_list)
expect_failure(expect_equal(Test_data, ac))
}
)
testthat::test_that(
"Load all excel file and skip column title, then set the new.", {
a <- readxl::read_excel(paste0(path,"/a.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
b <- readxl::read_excel(paste0(path,"/b.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
c <- readxl::read_excel(paste0(path,"/c.xlsx"), col_names=c("Name_d", "H", "W", "score"), skip=1)
abc <- rbind(a,b,c)
loadEXCEL(Filepath=path, Colname=c("Name_d", "H", "W", "score"), Skip=1)
expect_equal(Exceldataset, abc)
}
)
devtools::load_all("D:/HsuWP/GIT/Rproject/loadFile")
library("loadFile")
if (grepl("/tests/testthat/data", getwd())) {
path <- path
} else {
path <- paste0(getwd(),"/data")
}
path
library(covr)
?covr
??covr
install.packages("covr")
library(covr)
report()
library(covr)
report()
report()
library(covr)
report()
report(loadFile)
report("loadFile")
devtools::load_all(".")
report("loadFile")
report()
install.packages("DT")
library(covr)
library(DT)
report()
?report()
?package_coverage
package_coverage(path=getwd())
getwd()
a<-getwd()
a
package_coverage(path=a)
package_coverage("D:/HsuWP/GIT/Rproject/loadFile")
install.packages("Rtools")
library(Rtools)
?Rtools
??Rtools
devtools::check(document = FALSE, vignettes = TRUE, run_dont_test = TRUE)
.Last.error
usethis::use_news_md()
usethis::use_pkgdown()
pkgdown::build_site()
devtools::load_all(".")
pkgdown::build_site()
